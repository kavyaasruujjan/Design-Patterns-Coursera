Subject.java

public interface Subject {

	public void registerObserver(Observer);
	public void removeObserver(Observer);
	public void notifyObserver();
}


Channel.java

public class Channel implements Subject {

	private ArrayList<Observer> observers = new ArrayList<Observer>();
	private String channelName;
	private String status;
	
	public Channel(String channelName, String status){
		this.channelName = channelName;
		this.status = status;
	}
	
	public String getStatus(){
		return this.status;
	}
	
	public void setStatus(String status){
		this.status = status;
	}
	
	public String getChannelName(){
		return this.channelName;
	}
	
	public void setChannelName(String channelName){
		this.channelName = channelName;
	}
	
	public void notifyObservers(){
		foreach(Observer obs in observers){
			obs.update(this.status);
		}
	}
	
	public void registerObserver(Observer observer){
		observers.add(observer);
	}
	
	public void removeObserver(Observer observer){
		observers.delete(observer);
	}
}



Observer.java

public interface Observer {
	public void update(String status);
}



Follower.java

public class Follower implements Observer {
	
	private String followerName;
	
	public Follower(String followerName){
		this.followerName = followerName;
	}
	
	public String getFollowerName(){
		return this.followerName;
	}
	
	public void setFollowerName(String followerName){
		this.followerName = followerName;
	}
	
	public void update(String status){
		//Inform the followers that the channel is live
	}
	
	public void play(){
		//Play the channel
	}
}
